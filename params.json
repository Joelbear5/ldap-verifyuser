{"name":"ldap-verifyuser","tagline":"ldap-verifyuser is a node.js library based on ldapjs, that authenticates a user against a LDAP or AD without requiring an configured administrator account","body":"# ldap-verifyuser\r\n\r\n## What is `ldap-verifyuser`?\r\n\r\n`ldap-verifyuser` is a node.js library based on [ldapjs](http://ldapjs.org/), that authenticates a user against a LDAP or AD without requiring an configured administrator account (which is required by MANY other implementations). This is done, by using the userprovided credentials itself to bind against the LDAP and verify the account's status.\r\n\r\n## How does it work?\r\n\r\nOne possible implementation of this lib would be:\r\n```javascript\r\nvar lib = require('ldap-verifyuser');\r\n\r\nvar config = {\r\n  server: 'ldap://<ip>',\r\n  adrdn: 'MYCORP\\\\',\r\n  adquery: 'dc=MYCORP,dc=LOCAL',\r\n  debug: false\r\n},\r\nusername = 'myacc',\r\npassword = 'mypass'\r\n\r\nlib.verifyUser(config, username, password, function(err, data){\r\n  if(err) {\r\n    console.error('error', err);\r\n  } else {\r\n    console.log('valid?', data.valid);\r\n    console.log('locked?', data.locked);\r\n    console.log('raw data available?', data.raw ? true : false);\r\n  }\r\n  process.exit(data.status);\r\n});\r\n```\r\n\r\n## Installation\r\n\r\nTo install you need to:\r\n\r\n - Perform a `npm install ldap-verifyuser`\r\n - You're done!\r\n\r\n(You will need [>node.js<](https://nodejs.org/) of course)\r\n\r\n\r\n## Here be dragons!\r\n\r\nThis is the first inital version and will have rough edges, so please keep that in mind.\r\nThus: 'here be dragons!'.\r\n\r\nTemporarily i use my hotfixed version of ldapjs to make it compatible with node 0.12.x. Whenever a new upstream version of the official ldapjs is available i will switch back to it.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}